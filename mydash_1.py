import pandas as pd
import dash
from dash import dcc, html, dash_table
import plotly.express as px

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df = pd.read_excel("mytcas_courses_per_term.xlsx")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)"
df["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (num)"] = pd.to_numeric(
    df["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)"].replace(r"[^\d]", "", regex=True),
    errors="coerce"
)

# ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô "25,000 ‡∏ö‡∏≤‡∏ó"
df["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)"] = df["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (num)"].apply(
    lambda x: f"{int(x):,} ‡∏ö‡∏≤‡∏ó" if pd.notna(x) else "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"
)

# ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ó‡πà‡∏á: ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô
bar_fig = px.bar(
    df.groupby("‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô", as_index=False)["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (num)"].mean().dropna(),
    x="‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô",
    y="‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (num)",
    title="‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° (‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô)",
    labels={"‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (num)": "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (‡∏ö‡∏≤‡∏ó)"},
    color="‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô",
    text_auto=".2s"
)

# ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
bar_fig.update_layout(
    xaxis_tickangle=-45,
    plot_bgcolor="#fff",
    title_font_size=28,        # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
    font=dict(size=8),        # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
    height=700,                # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü
    width=1200,                # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü
    margin=dict(l=80, r=80, t=80, b=120)
)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Dash App
app = dash.Dash(__name__)

# Layout
app.layout = html.Div([
    html.H1("üìä Dashboard ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ TCAS", style={"textAlign": "center"}),

    dcc.Graph(figure=bar_fig),

    html.H3("üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", style={"textAlign": "left"}),

    dash_table.DataTable(
        data=df[["‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô", "‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "‡∏•‡∏¥‡∏á‡∏Å‡πå", "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)"]]
            .rename(columns={"‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)": "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)"})
            .to_dict("records"),
        columns=[
            {"name": col, "id": col}
            for col in ["‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô", "‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£", "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "‡∏•‡∏¥‡∏á‡∏Å‡πå", "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ó‡∏≠‡∏° (‡∏ö‡∏≤‡∏ó)"]
        ],
        style_cell={
            "textAlign": "left",
            "fontFamily": "Tahoma",
            "whiteSpace": "normal",
            "height": "auto",
            "padding": "8px"
        },
        style_header={
            "backgroundColor": "#f0f0f0",
            "fontWeight": "bold"
        },
        style_table={"overflowX": "auto"},
        page_size=15,
    )
])

if __name__ == '__main__':
    app.run(debug=True)
